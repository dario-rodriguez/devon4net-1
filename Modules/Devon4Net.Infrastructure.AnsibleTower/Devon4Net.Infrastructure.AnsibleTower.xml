<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Devon4Net.Infrastructure.AnsibleTower</name>
    </assembly>
    <members>
        <member name="T:Devon4Net.Infrastructure.AnsibleTower.Common.AnsibleTowerInstance">
            <summary>
            Ansible handler manager
            </summary>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.FullFlow(System.String,System.String)">
            <summary>
            Performs a regular Ansible Tower workflow.
            </summary>
            <param name="user">User name</param>
            <param name="password">User password</param>
            <returns>Something</returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Login(System.String,System.String)">
            <summary>
            Performs the basic Ansible Tower login
            </summary>
            <param name="user">User name</param>
            <param name="password">User password</param>
            <returns>The Ansible Tower login object result</returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Applications(System.String)">
            <summary>
            Gets the list of applications
            </summary>
            <param name="authenticationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Applications(Devon4Net.Infrastructure.AnsibleTower.Dto.Applications.ApplicationsRequestDto,System.String)">
            <summary>
            Creates an application
            </summary>
            <param name="applicationsRequest"></param>
            <param name="authenticationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Organizations(System.String)">
            <summary>
            Gets the organizations list 
            Please check the OrganizationRolesConst and OrganizationRelatedLinksConst classes
            </summary>
            <param name="authenticationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.GetOrganization(System.String,System.String)">
            <summary>
            Gets the organization given the organization identifier
            Please check the OrganizationRolesConst and OrganizationRelatedLinksConst classes
            </summary>
            <param name="authenticationToken"></param>
            <param name="organizationId"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.PostOrganization(System.String,Devon4Net.Infrastructure.AnsibleTower.Dto.Organizations.CreateOrganizationRequestDto)">
            <summary>
            Creates an organization
            Please check the OrganizationRolesConst and OrganizationRelatedLinksConst classes
            </summary>
            <param name="authenticationToken"></param>
            <param name="organizationRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Inventories(System.String)">
            <summary>
            Gets the list of inventories
            </summary>
            <param name="authenticationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Inventories(System.String,System.String)">
            <summary>
            Gets the inventory by the provided inventory Id
            </summary>
            <param name="authenticationToken"></param>
            <param name="inventoryId"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.Inventories(System.String,Devon4Net.Infrastructure.AnsibleTower.Dto.Inventories.CreateInventoryRequestDto)">
            <summary>
            Creates tan inventory
            </summary>
            <param name="authenticationToken"></param>
            <param name="inventoryRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.JobTemplates(System.String)">
            <summary>
            Gets the list of Job Templates
            </summary>
            <param name="authenticationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.JobTemplates(System.String,System.String)">
            <summary>
            Gets a Job Templates by the provided template job id
            </summary>
            <param name="authenticationToken"></param>
            <param name="jobTemplateId"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Controllers.AnsibleTowerController.JobTemplates(System.String,Devon4Net.Infrastructure.AnsibleTower.Dto.JobTemplates.CreateJobTemplateRequestDto)">
            <summary>
            Gets the list of Job Templates
            </summary>
            <param name="authenticationToken"></param>
            <param name="createJobTemplateRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Devon4Net.Infrastructure.AnsibleTower.Handler.AnsibleTowerHandler.Login(System.String,System.String)">
            <summary>
            Performs the basic login on Ansible Tower
            </summary>
            <param name="userName">UserName</param>
            <param name="password">Password</param>
            <returns>Result object structure</returns>
        </member>
    </members>
</doc>
